(function(){var $=window.jQuery||window.Zepto,requestTimeout=5e3,Twitch={baseUrl:"http://beta.twitch.tv/kraken/",_config:{},extend:function(src){$.extend(Twitch,src)}};Twitch.request=function(options,callback){params=options.params||{},callback=callback||function(){};var authenticated=!!Twitch._config.session.token,url=Twitch.baseUrl+options.method;authenticated&&(params.oauth_token=Twitch._config.session.token),$.ajax({url:url+"?"+$.param(params),dataType:"jsonp",timeout:requestTimeout}).done(function(data){console.log("Response Data:"),console.log(data),callback(null,data)}).fail(function(something,s2){callback(!0,null)})},Twitch.log=function(message){window.console&&console.log.apply(console,arguments)},window.Twitch=Twitch})(),function(){var store=window.sessionStorage;store||function(){var Storage=function(type){function createCookie(name,value,days){var date,expires;days?(date=new Date,date.setTime(date.getTime()+days*24*60*60*1e3),expires="; expires="+date.toGMTString()):expires="",document.cookie=name+"="+value+expires+"; path=/"}function readCookie(name){var nameEQ=name+"=",ca=document.cookie.split(";"),i,c;for(i=0;i<ca.length;i++){c=ca[i];while(c.charAt(0)==" ")c=c.substring(1,c.length);if(c.indexOf(nameEQ)===0)return c.substring(nameEQ.length,c.length)}return null}function setData(data){data=JSON.stringify(data),type=="session"?window.name=data:createCookie("localStorage",data,365)}function clearData(){type=="session"?window.name="":createCookie("localStorage","",365)}function getData(){var data=type=="session"?window.name:readCookie("localStorage");return data?JSON.parse(data):{}}var data=getData();return{length:0,clear:function(){data={},this.length=0,clearData()},getItem:function(key){return data[key]===undefined?null:data[key]},key:function(i){var ctr=0;for(var k in data){if(ctr==i)return k;ctr++}return null},removeItem:function(key){delete data[key],this.length--,setData(data)},setItem:function(key,value){data[key]=value+"",this.length++,setData(data)}}};store=new Storage("session")}(),Twitch.extend({_storage:store})}(),function(){var init=function(options,callback){if(!options.clientId)throw new Error("client id not specified");Twitch._config.clientId=options.clientId,Twitch._initSession(),typeof callback=="function"&&callback(null)};Twitch.extend({init:init})}(),function(){var SESSION_KEY="twitch_oauth_session",parseFragment=function(hash){var match,session;hash=hash||document.location.hash;var hashMatch=function(expr){var match=hash.match(expr);return match?match[1]:null};return session={token:hashMatch(/access_token=(\w+)/),scope:hashMatch(/scope=([\w+]+)/)?hashMatch(/scope=([\w+]+)/).split("+"):null,state:hashMatch(/state=(\w+)/),error:hashMatch(/error=(\w+)/),errorDescription:hashMatch(/error_description=(\w+)/)},session},updateSession=function(callback){Twitch.request({method:"/"},function(err,response){var session;if(err){Twitch.log("error encountered updating session:",err),callback(err,null);return}response.token.valid||(session={},Twitch._config.session=session,window.JSON&&Twitch._storage.setItem(SESSION_KEY,JSON.stringify(session))),typeof callback=="function"&&callback(null,session)})},getStatus=function(options,callback){typeof options=="function"&&(callback=options),typeof callback!="function"&&(callback=function(){});if(!Twitch._config.session)throw new Error("You must call init() before getStatus()");var makeSession=function(session){return{authenticated:!!session.token,token:session.token,scope:session.scope,error:session.error,errorDescription:session.errorDescription}};options&&options.force?updateSession(function(err,session){callback(err,makeSession(session||Twitch._config.session))}):callback(null,makeSession(Twitch._config.session))},login=function(options){if(!options.scope)throw new Error("Must specify list of requested scopes");var params={response_type:"token",client_id:Twitch._config.clientId,redirect_uri:options.redirect_uri||window.location.href,scope:options.scope.join(" ")};if(!params.client_id)throw new Error("You must call init() before login()");var url=Twitch.baseUrl+"oauth2/authorize?"+$.param(params);options.popup?Twitch._config.loginPopup=window.open(url,"Login with TwitchTV","height=450,width=680,resizable=yes,status=yes"):window.location=url},initSession=function(){var storedSession;Twitch._config.session={};if(window.JSON){storedSession=Twitch._storage.getItem(SESSION_KEY);if(storedSession)try{Twitch._config.session=JSON.parse(storedSession)}catch(e){}}document.location.hash.match(/access_token=(\w+)/)&&(Twitch._config.session=parseFragment(),window.JSON&&Twitch._storage.setItem(SESSION_KEY,JSON.stringify(Twitch._config.session)))};Twitch.extend({_initSession:initSession,_parseFragment:parseFragment,getStatus:getStatus,login:login})}();